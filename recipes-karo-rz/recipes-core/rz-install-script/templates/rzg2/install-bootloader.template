#!/bin/sh
set -e
#
# Author: Markus Bauer <mb@karo-electronics.de>
# (c) 2022
# autogenerated file from template
#
# This file flashes bootloader to $machine via serial port

SERIAL_PORT=$$1
CMD_DELAY="1.5"
BOOT_PART=1

if [ $$# = 0 ];then
    echo "Serial port must be specified" >&2
    exit 1
fi

cd "$$(cd "`dirname "$$0"`";pwd -P)"

boot_file() {
    local fsize=`stat -c %s "$$1"`
    printf "%u KiB\n" $$(($$fsize / 1024))
    dd if="$$1" of=$$SERIAL_PORT bs=1k status=progress
    sleep $$CMD_DELAY
    echo

    # Clear out the extra left over characters that randomly appear on some CPUs
    printf "\r" > $$SERIAL_PORT
    sleep $$CMD_DELAY
}

send_file() {
    local fsize=`stat -c %s "$$1"`
    printf "%u KiB\n" $$(($$fsize / 1024))
    printf "EM_WB\r" > $$SERIAL_PORT
    sleep $$CMD_DELAY
    printf "%u\r" "$$BOOT_PART" > $$SERIAL_PORT
    sleep $$CMD_DELAY
    printf "%x\r" "$$2" > $$SERIAL_PORT
    sleep $$CMD_DELAY
    printf "%x\r" $$fsize > $$SERIAL_PORT
    sleep $$CMD_DELAY
    dd if="$$1" of=$$SERIAL_PORT bs=1k status=progress
    echo
    sleep $$CMD_DELAY
}

echo "Started bootloader flash process on $$1"
echo
echo "Put your board into SCIF Download mode"
read -r -p "When done press <ENTER> to continue..." line
echo
echo
printf "Sending FlashWriter: "
boot_file Flash_Writer_SCIF_$machine.mot

printf "BL2 transfer: "
send_file bl2_bp-$machine.bin 1

printf "FIP transfer: "
send_file fip-$machine.bin 0x100

echo "Writing eMMC partconf"
# set BOOT_BUS_WIDTH
printf "EM_SECSD\r" > $$SERIAL_PORT
sleep $$CMD_DELAY
printf "b1\r" > $$SERIAL_PORT
sleep $$CMD_DELAY
printf "02\r" > $$SERIAL_PORT
sleep $$CMD_DELAY

# set BOOT_PART
printf "EM_SECSD\r" > $$SERIAL_PORT
sleep $$CMD_DELAY
printf "b3\r" > $$SERIAL_PORT
sleep $$CMD_DELAY
printf "%02x\r" $$(($$BOOT_PART << 3)) > $$SERIAL_PORT
sleep $$CMD_DELAY

echo
echo "======================================================"
echo "Done. Put the board into normal bootmode and reset it."
echo "======================================================"
